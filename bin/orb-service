#!/usr/bin/env ruby

$: << File.join(File.expand_path(File.dirname(__FILE__)), '..', 'lib')

require 'orb'
require 'orb/skills/mpv-skill'
require 'orb/skills/android-adb-skill'
require 'orb/skills/roku-skill'
require 'orb/providers/android/youtube'
require 'orb/providers/android/netflix'
require 'orb/providers/roku/youtube'
require 'orb/providers/roku/netflix'
require 'orb/skills/send-mail-skill'
require 'orb/skills/send-sms-skill'

ORB.init

require 'sinatra'

post "/command" do
  request.body.rewind
  obj = JSON.parse request.body.read
  
  txt=obj['text'].strip
  
  if txt =~ /^set device (.*)/
    if d=ORB::DeviceSkill.find($1.strip)
      ORB::DeviceSkill.active_device = d
      next ''
    else
      ORB::SelfSkill.instance.say "No Device named, #{$1}"
    end
  elsif txt =~ /^unset device/
    if d=ORB::DeviceSkill.active_device
      if d.raw.is_a?(ORB::Media::MediaDevice)
        ORB::Media::MediaSkill.instance.player = nil
      end
    end
  
    ORB::DeviceSkill.active_device = nil
    next ''
  end
  
  ORB::DeviceSkill::DEVICE_KEYWORDS.each do |kw|
    if txt =~ kw and ad=ORB::DeviceSkill.active_device
      device = txt.split("on").last.strip
      
      # Explicit target device
      if skill=ORB::DeviceSkill.find(device)
      
      # Use active device
      else
        txt += " on #{ad.name}"
      end
    end
  end
  
  if skill = ORB::Skill.find(txt)
  
    next skill.execute(txt.strip)
  end
  
  ORB::UnhandledSkill.execute
end

get "/devices" do
  content_type :text
  
  ORB::Skill.skills.find_all do |s| s.is_a?(ORB::DeviceSkill) end.map do |s|
    s.inspect
  end.join("\n\n")
end

get "/skills" do
  content_type :text
  
  ORB::Skill.skills.map do |s|
    s.inspect
  end.join("\n\n")
end
  

